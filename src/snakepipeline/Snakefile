# Snakemake-based pipeline for 5OH-Seq in yeast
# should ideally be able to just change a few variables in the beginning, and run snakemake to generate output
# Usage:
# snakemake --cluster bsub

# Experiment-specific variables
user = "/vol2/home/speach"  # change path to your home directory
DATA = "%s/projects/5OH/data/snaketest/" % user
SAMPLES = "SP8 SP7".split()
DESCRIPS = "4742_DMSO 4742_Tm".split()
ASSEMBLY = "sacCer1"
RESULT = "%s/projects/5OH/results/20140904_snaketest/" % user
UMI = "NNNNNNNN"
ALIGN_MODES = ("std")
ALIGN_ARGS = ("")


# Consistent variables
source = "/vol2/home/speach"
PIPELINE = "%s/devel/5OH/src/pipeline" % source
BOWTIEIDX = "%s/ref/genomes/%s/%s" % (source, ASSEMBLY, ASSEMBLY)
CHROM_SIZES = "%s/ref/genomes/%s/%s.chrom.sizes" % (source, ASSEMBLY, ASSEMBLY)

# Consistent variables (currently specific to yeast)
GTF = "%s/ref/genomes/%s/sgdGene.%s.gtf" % (source, ASSEMBLY, ASSEMBLY)
FASTA = "%s/ref/genomes/%s/%s.fa" % (source, ASSEMBLY, ASSEMBLY)
FULLGFF = "%s/ref/genomes/sacCer1/sacCer1.fuller.bed" % source
MRNAWINDOWS = "%s/ref/genomes/sacCer1/sacCer1.mrna.20windows.bed" % source
UTRWINDOWS = "%s/ref/genomes/sacCer1/sacCer1.UTRs.2window.bed" % source

# Functions

rule all:
    input: expand("{data}{sample}.umi.fq.gz", data=DATA, sample=SAMPLES)
    #input: expand("{result}/{sample}.align.{align_mode}.bam", result=RESULT, sample=SAMPLES, align_mode=ALIGN_MODES)

rule trim_umi:
    input: DATA + "{sample}.fq.gz"
    output: DATA + "{sample}.umi.fq.gz"
    params: UMI
    shell: "bash trim_umi.sh {input} {params} {output}"

#rule align:
#    input: DATA + "{sample}.umi.fq.gz"
#    output: RESULT + "{sample}.align.{align_mode}.bam"
#    shell: "bsub < s1_align.sh"